package tuloskortti.test;
// Generated by ComTest BEGIN
import kanta.UusiTuloskortti;
import java.util.*;
import java.io.File;
import static org.junit.Assert.*;
import org.junit.*;
import tuloskortti.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.08.29 16:21:44 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class TuloskortitTest {



  // Generated by ComTest BEGIN
  /** testLisaaTuloskortti53 */
  @Test
  public void testLisaaTuloskortti53() {    // Tuloskortit: 53
    Tuloskortit tuloskortit = new Tuloskortit(); 
    Tuloskortti tuloskortti = new Tuloskortti(1, 1, 301, 290, 290, 270, 4, 4); 
    assertEquals("From: Tuloskortit line: 56", 0, tuloskortit.getLkm()); 
    tuloskortit.lisaaTuloskortti(tuloskortti); 
    assertEquals("From: Tuloskortit line: 58", 1, tuloskortit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaaTuloskortti69 */
  @Test
  public void testLisaaTuloskortti69() {    // Tuloskortit: 69
    Tuloskortit tuloskortit = new Tuloskortit(); 
    assertEquals("From: Tuloskortit line: 72", 0, tuloskortit.getLkm()); 
    tuloskortit.lisaaTuloskortti(UusiTuloskortti.luoTuloskortti(1)); 
    assertEquals("From: Tuloskortit line: 74", 18, tuloskortit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaaTaiMuutaTuloskorttia87 */
  @Test
  public void testLisaaTaiMuutaTuloskorttia87() {    // Tuloskortit: 87
    Tuloskortit tuloskortit = new Tuloskortit(); 
    assertEquals("From: Tuloskortit line: 90", 0, tuloskortit.getLkm()); 
    try {
    tuloskortit.lisaaTaiMuutaTuloskorttia(UusiTuloskortti.luoTuloskortti(1)); 
    } catch (SailoException e) {
    e.printStackTrace(); 
    }
    assertEquals("From: Tuloskortit line: 96", 18, tuloskortit.getLkm()); 
    try {
    tuloskortit.lisaaTaiMuutaTuloskorttia(UusiTuloskortti.luoTuloskortti(2)); 
    } catch (SailoException e) {
    e.printStackTrace(); 
    }
    assertEquals("From: Tuloskortit line: 103", 36, tuloskortit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTuloskortit132 */
  @Test
  public void testAnnaTuloskortit132() {    // Tuloskortit: 132
    Tuloskortit tuloskortit = new Tuloskortit(); 
    Tuloskortti vayla1 = new Tuloskortti(2,1,433,407,387,387,5,1); 
    tuloskortit.lisaaTuloskortti(vayla1); 
    Tuloskortti vayla2 = new Tuloskortti(2,2,119,117,115,115,3,4); 
    tuloskortit.lisaaTuloskortti(vayla2); 
    Tuloskortti vayla3 = new Tuloskortti(2,3,320,308,308,284,4,9); 
    tuloskortit.lisaaTuloskortti(vayla3); 
    List<Tuloskortti> loytyneet; 
    loytyneet = tuloskortit.annaTuloskortit(3); 
    assertEquals("From: Tuloskortit line: 145", 0, loytyneet.size()); 
    loytyneet = tuloskortit.annaTuloskortit(2); 
    assertEquals("From: Tuloskortit line: 147", 3, loytyneet.size()); 
    assertEquals("From: Tuloskortit line: 148", true, loytyneet.get(0) == vayla1); 
    assertEquals("From: Tuloskortit line: 149", true, loytyneet.get(1) == vayla2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaTuloskortti168 */
  @Test
  public void testPoistaTuloskortti168() {    // Tuloskortit: 168
    Tuloskortit tuloskortit = new Tuloskortit(); 
    assertEquals("From: Tuloskortit line: 171", 0, tuloskortit.getLkm()); 
    tuloskortit.lisaaTuloskortti(UusiTuloskortti.luoTuloskortti(1)); 
    tuloskortit.lisaaTuloskortti(UusiTuloskortti.luoTuloskortti(2)); 
    assertEquals("From: Tuloskortit line: 174", 36, tuloskortit.getLkm()); 
    tuloskortit.poistaTuloskortti(1); 
    assertEquals("From: Tuloskortit line: 176", 18, tuloskortit.getLkm()); 
    tuloskortit.poistaTuloskortti(2); 
    assertEquals("From: Tuloskortit line: 178", 0, tuloskortit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta223 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta223() throws SailoException {    // Tuloskortit: 223
    Tuloskortit tuloskortit = new Tuloskortit(); 
    Tuloskortti t1 = new Tuloskortti(1, 1, 310, 290, 290, 270, 4, 3); 
    Tuloskortti t2 = new Tuloskortti(1, 2, 470, 450, 420, 420, 5, 8); 
    String hakemisto = "testiGolfRekisteri"; 
    String tiedostonNimi = hakemisto + "/tuloskortti"; 
    File fTiedosto = new File(tiedostonNimi + ".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    fTiedosto.delete(); 
    try {
    tuloskortit.lueTiedostosta(tiedostonNimi); 
    fail("Tuloskortit: 235 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    tuloskortit.lisaaTuloskortti(t1); 
    tuloskortit.lisaaTuloskortti(t2); 
    tuloskortit.tallenna(hakemisto); 
    assertEquals("From: Tuloskortit line: 239", 2, tuloskortit.getLkm()); 
    tuloskortit = new Tuloskortit(); 
    try {
    tuloskortit.lueTiedostosta(tiedostonNimi); 
    fail("Tuloskortit: 241 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    tuloskortit.lisaaTuloskortti(t2); 
    tuloskortit.tallenna(hakemisto); 
    assertEquals("From: Tuloskortit line: 244", true, fTiedosto.delete()); 
    assertEquals("From: Tuloskortit line: 245", true, dir.delete()); 
  } // Generated by ComTest END
}