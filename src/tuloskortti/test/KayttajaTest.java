package tuloskortti.test;
// Generated by ComTest BEGIN
import fi.jyu.mit.ohj2.Suuntaaja;
import static org.junit.Assert.*;
import org.junit.*;
import tuloskortti.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.08.24 19:47:54 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KayttajaTest {



  // Generated by ComTest BEGIN
  /** testTulosta74 */
  @Test
  public void testTulosta74() {    // Kayttaja: 74
    Kayttaja kayttaja = new Kayttaja("Aku", "Ankka Golf", 2.1, 2001); 
    Suuntaaja.StringOutput so = new Suuntaaja.StringOutput(); 
    String tulos = "99|Aku|Ankka Golf|2.1|2001"; 
    kayttaja.setTunnusNro(99); 
    kayttaja.tulosta(System.out); 
    assertEquals("From: Kayttaja line: 82", null, so.ero(tulos)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTunnusNro109 */
  @Test
  public void testSetTunnusNro109() {    // Kayttaja: 109
    Kayttaja kayttaja = new Kayttaja("Aku", "Ankka Gol", 2.1, 2001); 
    kayttaja.setTunnusNro(5); 
    assertEquals("From: Kayttaja line: 112", 5, kayttaja.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi190 */
  @Test
  public void testRekisteroi190() {    // Kayttaja: 190
    Kayttaja testi = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 192", 0, testi.getTunnusNro()); 
    testi.rekisteroi(); 
    Kayttaja testi2 = new Kayttaja(); 
    testi2.rekisteroi(); 
    int n1 = testi.getTunnusNro(); 
    int n2 = testi2.getTunnusNro(); 
    assertEquals("From: Kayttaja line: 198", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString211 */
  @Test
  public void testToString211() {    // Kayttaja: 211
    Kayttaja kayttaja = new Kayttaja(); 
    kayttaja.parse("       3         |       Iines Ankka     |   Ankkalinna Golf"); 
    assertEquals("From: Kayttaja line: 214", true, kayttaja.toString().startsWith("3|Iines Ankka|Ankkalinna Golf")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse227 */
  @Test
  public void testParse227() {    // Kayttaja: 227
    Kayttaja kayttaja = new Kayttaja(); 
    kayttaja.parse("       3         |       Iines Ankka     |   Ankkalinna Golf"); 
    assertEquals("From: Kayttaja line: 230", 3, kayttaja.getTunnusNro()); 
    assertEquals("From: Kayttaja line: 231", true, kayttaja.toString().startsWith("3|Iines Ankka|Ankkalinna Golf")); 
    kayttaja.rekisteroi(); 
    int n = kayttaja.getTunnusNro(); 
    kayttaja.parse("" + (n + 20));  // Otetaan merkkijonon alusta vain id numero ja lisätään siihen 20
    kayttaja.rekisteroi();  // Tarkistetaan tämän jälkeen, että tulee isompi numero
    assertEquals("From: Kayttaja line: 236", n + 20 + 1, kayttaja.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone252 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone252() throws CloneNotSupportedException {    // Kayttaja: 252
    Kayttaja k1 = new Kayttaja(); 
    k1.parse("       4         |       Tupu Ankka     |   Ankkalinna Golf"); 
    Kayttaja kopio = k1.clone(); 
    assertEquals("From: Kayttaja line: 257", k1.toString(), kopio.toString()); 
    k1.parse("    1    | Iines Ankka    | Roope Golf"); 
    assertEquals("From: Kayttaja line: 259", false, kopio.toString().equals(k1.toString())); 
  } // Generated by ComTest END
}